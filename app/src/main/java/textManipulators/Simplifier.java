package textManipulators;

public abstract class Simplifier {

    /*
    Метод simplify этого класса очень важен. Его надо будет вызывать в самом начале программы, чтобы упростить исходное
    выражаение, если это возможно, и в конце, чтобы ответ выглядел приемлимо. Вызывать в начале необходимо для более
    рационального использования ресурсов. Например, пользователь может ввести выражение "cos(x) - cos(x)", где вместо
    x может стоять сколько угодно длинное и сложное выражение. Без этого метода программа начнет высчитывать производную
    от двух сложных функций, но в итоге все равно получит 0. Метод simplify изначально приведет это выражение к нулевому
    значению, сэкономит время пользователя и ресурсы компьютера

    Это поясняющая записка на будущее

    Удалить по завершении написания класса
     */

    public static void simplify (StringBuilder expression){
        /*
        Метод, который будет упрощать заданное выражение
        Т.е. совмещать константы, убирать лишние минусы
         */
    }

    private static void reduceConst (StringBuilder expression){
        //Метод, совмещающий константы
    }

    private static void reduceMinuses (StringBuilder expression){
        //Метод, убирающий лишние минусы
    }

    private static void combineTerms (StringBuilder expression){
        //Метод, приводящий подобные слагаемые
    }
}
